<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <!-- bean配置文件 -->
  <!--扫描包路径-->
  <context:component-scan base-package="org.moonbreezee.demo" />

  <!-- 开启注解 -->
  <context:annotation-config />
  <mvc:annotation-driven />

  <!-- 静态资源(js、image等)的访问 -->
  <mvc:default-servlet-handler />

  <!--ViewResolver 视图解析器-->
  <!--用于支持Servlet、JSP视图解析-->
  <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    <property name="prefix" value="/WEB-INF/views/" />
    <property name="suffix" value=".jsp" />
  </bean>

  <!--  添加Bean的xml装配文件-->
  <!-- Bean的配置信息里包含了：
    1. 如何创建bean
    2. bean的生命周期回调方法配置
    3. bean的依赖关系 -->

  <bean id="customerBean" class="org.moonbreezee.demo.Customer" init-method="init" destroy-method="close">
    <!-- 添加类的依赖关系-->
    <constructor-arg ref="person" />
    <!-- 这里配置类的初始化参数，这里就对应Customer的构造函数参数 -->
    <property name="name" value="curstom1"></property>
    <!-- Setter 方法配置，传给 customerBean -->
    <property name="logger" ref="logger" />
  </bean>
  <!-- lazy-init: 懒加载，让Spring容器在Bean首次用到时创建Bean实例，而不是在应用一启动就创建-->
  <bean id="person" class="org.moonbreezee.demo.Person" lazy-init="true">
    <!-- 构造函数参数-->
    <constructor-arg value="female" />
  </bean>
  <!-- 创建logger对象，注入到Customer对象中 -->
  <bean id="logger" class="org.moonbreezee.demo.Logger"></bean>
</beans>